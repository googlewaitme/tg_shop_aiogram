
import os
import handlers
from aiogram import executor, types
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from data import config
from loader import dp, db, bot
import filters
import logging

filters.setup(dp)

WEBAPP_HOST = "0.0.0.0"
WEBAPP_PORT = int(os.environ.get("PORT", 5000))


@dp.message_handler(commands='start')
async def cmd_start(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("–ü–æ–µ—Ö–∞–ª–∏!")

    await message.answer('''–ü—Ä–∏–≤–µ—Ç! üëã

ü§ñ –Ø –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω –ø–æ –ø–æ–¥–∞–∂–µ —Ç–æ–≤–∞—Ä–æ–≤ –ª—é–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

üõçÔ∏è –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏–≥–ª—è–Ω—É–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /menu.

üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å.–∫–∞—Å—Å—É, –°–±–µ—Ä–±–∞–Ω–∫ –∏–ª–∏ Qiwi.

‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ö–æ–º–∞–Ω–¥–∞ /sos –ø–æ–º–æ–∂–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞—Ä–∞—é—Ç—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è.
    ''', reply_markup=markup)


async def on_startup(dp):
    logging.basicConfig(level=logging.INFO)
    db.create_tables()

    await bot.delete_webhook()
    await bot.set_webhook(config.WEBHOOK_URL)


async def on_shutdown():
    logging.warning("Shutting down..")
    await bot.delete_webhook()
    await dp.storage.close()
    await dp.storage.wait_closed()
    logging.warning("Bot down")


if __name__ == '__main__':

    if "HEROKU" in list(os.environ.keys()):

        executor.start_webhook(
            dispatcher=dp,
            webhook_path=config.WEBHOOK_PATH,
            on_startup=on_startup,
            on_shutdown=on_shutdown,
            skip_updates=True,
            host=WEBAPP_HOST,
            port=WEBAPP_PORT,
        )

    else:

        executor.start_polling(dp, on_startup=on_startup, skip_updates=False)
